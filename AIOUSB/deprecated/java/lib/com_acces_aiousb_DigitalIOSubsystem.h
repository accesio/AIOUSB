/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_acces_aiousb_DigitalIOSubsystem */

#ifndef _Included_com_acces_aiousb_DigitalIOSubsystem
#define _Included_com_acces_aiousb_DigitalIOSubsystem
#ifdef __cplusplus
extern "C" {
#endif
#undef com_acces_aiousb_DigitalIOSubsystem_BITS_PER_BYTE
#define com_acces_aiousb_DigitalIOSubsystem_BITS_PER_BYTE 8L
/*
 * Class:     com_acces_aiousb_DigitalIOSubsystem
 * Method:    getNumPorts
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_DigitalIOSubsystem_getNumPorts
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_acces_aiousb_DigitalIOSubsystem
 * Method:    getNumTristateGroups
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_DigitalIOSubsystem_getNumTristateGroups
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_acces_aiousb_DigitalIOSubsystem
 * Method:    configure
 * Signature: (IZ[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_DigitalIOSubsystem_configure__IZ_3B_3B
  (JNIEnv *, jobject, jint, jboolean, jbyteArray, jbyteArray);

/*
 * Class:     com_acces_aiousb_DigitalIOSubsystem
 * Method:    configure
 * Signature: (I[B[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_DigitalIOSubsystem_configure__I_3B_3B_3B
  (JNIEnv *, jobject, jint, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     com_acces_aiousb_DigitalIOSubsystem
 * Method:    getConfiguration
 * Signature: (I[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_DigitalIOSubsystem_getConfiguration
  (JNIEnv *, jobject, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_acces_aiousb_DigitalIOSubsystem
 * Method:    read1
 * Signature: (II[Z)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_DigitalIOSubsystem_read1
  (JNIEnv *, jobject, jint, jint, jbooleanArray);

/*
 * Class:     com_acces_aiousb_DigitalIOSubsystem
 * Method:    readAll
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_DigitalIOSubsystem_readAll
  (JNIEnv *, jobject, jint, jbyteArray);

/*
 * Class:     com_acces_aiousb_DigitalIOSubsystem
 * Method:    writeAll
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_DigitalIOSubsystem_writeAll
  (JNIEnv *, jobject, jint, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
