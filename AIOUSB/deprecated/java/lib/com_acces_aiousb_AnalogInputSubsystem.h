/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_acces_aiousb_AnalogInputSubsystem */

#ifndef _Included_com_acces_aiousb_AnalogInputSubsystem
#define _Included_com_acces_aiousb_AnalogInputSubsystem
#ifdef __cplusplus
extern "C" {
#endif
#undef com_acces_aiousb_AnalogInputSubsystem_CAL_MODE_NORMAL
#define com_acces_aiousb_AnalogInputSubsystem_CAL_MODE_NORMAL 0L
#undef com_acces_aiousb_AnalogInputSubsystem_CAL_MODE_GROUND
#define com_acces_aiousb_AnalogInputSubsystem_CAL_MODE_GROUND 1L
#undef com_acces_aiousb_AnalogInputSubsystem_CAL_MODE_REFERENCE
#define com_acces_aiousb_AnalogInputSubsystem_CAL_MODE_REFERENCE 3L
#undef com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_CTR0_EXT
#define com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_CTR0_EXT 16L
#undef com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_FALLING_EDGE
#define com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_FALLING_EDGE 8L
#undef com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_SCAN
#define com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_SCAN 4L
#undef com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_EXTERNAL
#define com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_EXTERNAL 2L
#undef com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_TIMER
#define com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_TIMER 1L
#undef com_acces_aiousb_AnalogInputSubsystem_RANGE_0_10V
#define com_acces_aiousb_AnalogInputSubsystem_RANGE_0_10V 0L
#undef com_acces_aiousb_AnalogInputSubsystem_RANGE_10V
#define com_acces_aiousb_AnalogInputSubsystem_RANGE_10V 1L
#undef com_acces_aiousb_AnalogInputSubsystem_RANGE_0_5V
#define com_acces_aiousb_AnalogInputSubsystem_RANGE_0_5V 2L
#undef com_acces_aiousb_AnalogInputSubsystem_RANGE_5V
#define com_acces_aiousb_AnalogInputSubsystem_RANGE_5V 3L
#undef com_acces_aiousb_AnalogInputSubsystem_RANGE_0_2V
#define com_acces_aiousb_AnalogInputSubsystem_RANGE_0_2V 4L
#undef com_acces_aiousb_AnalogInputSubsystem_RANGE_2V
#define com_acces_aiousb_AnalogInputSubsystem_RANGE_2V 5L
#undef com_acces_aiousb_AnalogInputSubsystem_RANGE_0_1V
#define com_acces_aiousb_AnalogInputSubsystem_RANGE_0_1V 6L
#undef com_acces_aiousb_AnalogInputSubsystem_RANGE_1V
#define com_acces_aiousb_AnalogInputSubsystem_RANGE_1V 7L
#undef com_acces_aiousb_AnalogInputSubsystem_MIN_COUNTS
#define com_acces_aiousb_AnalogInputSubsystem_MIN_COUNTS 0L
#undef com_acces_aiousb_AnalogInputSubsystem_MAX_COUNTS
#define com_acces_aiousb_AnalogInputSubsystem_MAX_COUNTS 65535L
#undef com_acces_aiousb_AnalogInputSubsystem_CAL_TABLE_WORDS
#define com_acces_aiousb_AnalogInputSubsystem_CAL_TABLE_WORDS 65536L
#undef com_acces_aiousb_AnalogInputSubsystem_NUM_CONFIG_REGISTERS
#define com_acces_aiousb_AnalogInputSubsystem_NUM_CONFIG_REGISTERS 20L
#undef com_acces_aiousb_AnalogInputSubsystem_NUM_MUX_CONFIG_REGISTERS
#define com_acces_aiousb_AnalogInputSubsystem_NUM_MUX_CONFIG_REGISTERS 21L
#undef com_acces_aiousb_AnalogInputSubsystem_NUM_GAIN_CODE_REGISTERS
#define com_acces_aiousb_AnalogInputSubsystem_NUM_GAIN_CODE_REGISTERS 16L
#undef com_acces_aiousb_AnalogInputSubsystem_REG_GAIN_CODE
#define com_acces_aiousb_AnalogInputSubsystem_REG_GAIN_CODE 0L
#undef com_acces_aiousb_AnalogInputSubsystem_REG_CAL_MODE
#define com_acces_aiousb_AnalogInputSubsystem_REG_CAL_MODE 16L
#undef com_acces_aiousb_AnalogInputSubsystem_REG_TRIG_MODE
#define com_acces_aiousb_AnalogInputSubsystem_REG_TRIG_MODE 17L
#undef com_acces_aiousb_AnalogInputSubsystem_REG_START_END
#define com_acces_aiousb_AnalogInputSubsystem_REG_START_END 18L
#undef com_acces_aiousb_AnalogInputSubsystem_REG_OVERSAMPLE
#define com_acces_aiousb_AnalogInputSubsystem_REG_OVERSAMPLE 19L
#undef com_acces_aiousb_AnalogInputSubsystem_REG_MUX_START_END
#define com_acces_aiousb_AnalogInputSubsystem_REG_MUX_START_END 20L
#undef com_acces_aiousb_AnalogInputSubsystem_DIFFERENTIAL_MODE
#define com_acces_aiousb_AnalogInputSubsystem_DIFFERENTIAL_MODE 8L
#undef com_acces_aiousb_AnalogInputSubsystem_MAX_OVERSAMPLE
#define com_acces_aiousb_AnalogInputSubsystem_MAX_OVERSAMPLE 255L
#undef com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_VALID_MASK
#define com_acces_aiousb_AnalogInputSubsystem_TRIG_MODE_VALID_MASK 31L
#undef com_acces_aiousb_AnalogInputSubsystem_AUTO_CAL_UNKNOWN
#define com_acces_aiousb_AnalogInputSubsystem_AUTO_CAL_UNKNOWN 0L
#undef com_acces_aiousb_AnalogInputSubsystem_AUTO_CAL_NOT_PRESENT
#define com_acces_aiousb_AnalogInputSubsystem_AUTO_CAL_NOT_PRESENT 1L
#undef com_acces_aiousb_AnalogInputSubsystem_AUTO_CAL_PRESENT
#define com_acces_aiousb_AnalogInputSubsystem_AUTO_CAL_PRESENT 2L
#undef com_acces_aiousb_AnalogInputSubsystem_MAX_CHANNELS
#define com_acces_aiousb_AnalogInputSubsystem_MAX_CHANNELS 128L
/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    getConfigSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_getConfigSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    getNumChannels
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_getNumChannels
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    getNumMUXChannels
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_getNumMUXChannels
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    getChannelsPerGroup
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_getChannelsPerGroup
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    queryCal
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_queryCal
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    isDiscardFirstSample
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_isDiscardFirstSample
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    setDiscardFirstSample
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_setDiscardFirstSample
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    loadCalTable
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_loadCalTable
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    setCalTable
 * Signature: (I[C)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_setCalTable
  (JNIEnv *, jobject, jint, jcharArray);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    getConfig
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_getConfig
  (JNIEnv *, jobject, jint, jbyteArray);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    setConfig
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_setConfig
  (JNIEnv *, jobject, jint, jbyteArray);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    internalCal
 * Signature: (IZ[CLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_internalCal
  (JNIEnv *, jobject, jint, jboolean, jcharArray, jstring);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    externalCal
 * Signature: (I[D[CLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_externalCal
  (JNIEnv *, jobject, jint, jdoubleArray, jcharArray, jstring);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    getScan
 * Signature: (I[C)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_getScan
  (JNIEnv *, jobject, jint, jcharArray);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    readBulkStart
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_readBulkStart
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    readBulkSamplesRemaining
 * Signature: (I[I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_readBulkSamplesRemaining
  (JNIEnv *, jobject, jint, jintArray);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    readBulkNext
 * Signature: (II[C)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_readBulkNext
  (JNIEnv *, jobject, jint, jint, jcharArray);

/*
 * Class:     com_acces_aiousb_AnalogInputSubsystem
 * Method:    readBulkFinish
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_acces_aiousb_AnalogInputSubsystem_readBulkFinish
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
